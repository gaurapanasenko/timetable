# Generated by Django 2.2.1 on 2020-05-31 21:33

from django.db import migrations, models
import django.db.models.deletion
import django_improvements.models
import lesson_field.models
import timetableapp.models
import timetableapp.settings
import yearlessdate.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(unique=True, verbose_name='number')),
                ('address', models.CharField(blank=True, default=None, max_length=128, null=True, unique=True, verbose_name='address')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, default=None, max_digits=9, null=True, verbose_name='longitude')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, default=None, max_digits=9, null=True, verbose_name='latitude')),
            ],
            options={
                'verbose_name': 'Building object',
                'verbose_name_plural': 'buildings',
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(verbose_name='number')),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timetableapp.Building', verbose_name='building')),
            ],
            options={
                'verbose_name': 'Classroom object',
                'verbose_name_plural': 'classrooms',
                'ordering': ['building', 'number'],
                'unique_together': {('building', 'number')},
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='name')),
                ('abbreviation', models.CharField(blank=True, default=None, max_length=16, null=True, unique=True, verbose_name='abbreviation')),
            ],
            options={
                'verbose_name': 'Department object',
                'verbose_name_plural': 'departments',
                'ordering': ['abbreviation', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='name')),
                ('abbreviation', models.CharField(blank=True, default=None, max_length=16, null=True, unique=True, verbose_name='abbreviation')),
            ],
            options={
                'verbose_name': 'Faculty object',
                'verbose_name_plural': 'faculties',
                'ordering': ['abbreviation', 'name'],
            },
        ),
        migrations.CreateModel(
            name='FormOfStudy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='name')),
                ('suffix', models.CharField(blank=True, max_length=16, unique=True, verbose_name='suffix')),
                ('semesters', models.PositiveSmallIntegerField(default=8, help_text='Total number of semesters, later if you specify fewer Semester date ranges than Number of semesters they will cycle from beginning automatically.', verbose_name='number of semesters')),
                ('priority', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)], default=5, verbose_name='priority')),
            ],
            options={
                'verbose_name': 'Form of study object',
                'verbose_name_plural': 'forms of study',
                'ordering': ['priority', 'suffix'],
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(default=0, help_text='If is zero then it will be union of groups in group stream.', verbose_name='number')),
            ],
            options={
                'verbose_name': 'Group object',
                'verbose_name_plural': 'groups',
            },
            bases=(django_improvements.models.ReadOnlyOnExistForeignKey, models.Model),
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=128, verbose_name='first name')),
                ('middle_name', models.CharField(max_length=128, verbose_name='middle name')),
                ('last_name', models.CharField(max_length=128, verbose_name='last name')),
            ],
            options={
                'verbose_name': 'Person object',
                'verbose_name_plural': 'persons',
                'ordering': ['first_name', 'middle_name', 'last_name'],
                'unique_together': {('first_name', 'middle_name', 'last_name')},
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='timetableapp.Department', verbose_name='department')),
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='timetableapp.Person', verbose_name='person')),
            ],
            options={
                'verbose_name': 'Teacher object',
                'verbose_name_plural': 'teachers',
                'ordering': ['person'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='name')),
                ('department', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='timetableapp.Department', verbose_name='department')),
            ],
            options={
                'verbose_name': 'Subject object',
                'verbose_name_plural': 'subjects',
                'ordering': ['name', 'department'],
                'unique_together': {('name', 'department')},
            },
        ),
        migrations.CreateModel(
            name='SubGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numerator', models.PositiveSmallIntegerField(default=0, help_text='Index of subgroup.', verbose_name='numerator')),
                ('denominator', models.PositiveSmallIntegerField(default=0, help_text='Total number of subgroups in this type of subgroup.', verbose_name='denominator')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timetableapp.Group', verbose_name='group stream')),
            ],
            options={
                'verbose_name': 'Group object',
                'verbose_name_plural': 'groups',
                'unique_together': {('group', 'numerator', 'denominator')},
            },
            bases=(django_improvements.models.ReadOnlyOnExistForeignKey, models.Model),
        ),
        migrations.CreateModel(
            name='Specialty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='name')),
                ('number', models.PositiveSmallIntegerField(unique=True, verbose_name='number')),
                ('abbreviation', models.CharField(max_length=16, unique=True, verbose_name='abbreviation')),
                ('faculty', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='timetableapp.Faculty', verbose_name='faculty')),
            ],
            options={
                'verbose_name': 'Specialty object',
                'verbose_name_plural': 'specialties',
                'ordering': ['abbreviation'],
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.PositiveSmallIntegerField(verbose_name='semester')),
                ('lesson', models.PositiveSmallIntegerField(choices=[(0, 'Lectures'), (1, 'Practices'), (2, 'Laboratory')], default=0, verbose_name='lesson')),
                ('subgroup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timetableapp.SubGroup', verbose_name='subgroup')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timetableapp.Subject', verbose_name='subjects')),
            ],
            options={
                'verbose_name': 'Lesson object',
                'verbose_name_plural': 'lessons',
                'unique_together': {('subgroup', 'semester', 'subject', 'lesson')},
            },
            bases=(django_improvements.models.ReadOnlyOnExistForeignKey, models.Model),
        ),
        migrations.CreateModel(
            name='GroupStream',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveSmallIntegerField(db_index=True, default=timetableapp.settings.current_year, validators=[timetableapp.models.year_min_value, timetableapp.models.year_max_value], verbose_name='year')),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='timetableapp.FormOfStudy', verbose_name='form of study')),
                ('specialty', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='timetableapp.Specialty', verbose_name='specialty')),
            ],
            options={
                'verbose_name': 'Group stream object',
                'verbose_name_plural': 'group streams',
                'ordering': ['-year', 'specialty', 'form'],
                'unique_together': {('specialty', 'year', 'form')},
            },
            bases=(django_improvements.models.ReadOnlyOnExistForeignKey, models.Model),
        ),
        migrations.AddField(
            model_name='group',
            name='group_stream',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timetableapp.GroupStream', verbose_name='group stream'),
        ),
        migrations.CreateModel(
            name='FormOfStudySemester',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_range', yearlessdate.models.YearlessDateRangeField(verbose_name='default date range')),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='timetableapp.FormOfStudy', verbose_name='form of study')),
            ],
            options={
                'verbose_name': 'Semester date range object',
                'verbose_name_plural': 'semester date ranges',
            },
        ),
        migrations.AddField(
            model_name='department',
            name='faculty',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='timetableapp.Faculty', verbose_name='faculty'),
        ),
        migrations.CreateModel(
            name='CurriculumRecordingTimings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.PositiveSmallIntegerField(verbose_name='semester')),
                ('lectures', models.PositiveSmallIntegerField(verbose_name='number of lectures')),
                ('practices', models.PositiveSmallIntegerField(verbose_name='number of practices')),
                ('laboratory', models.PositiveSmallIntegerField(verbose_name='number of laboratory')),
                ('independent_work', models.PositiveSmallIntegerField(verbose_name='amount of independent work')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timetableapp.Group', verbose_name='group')),
                ('subjects', models.ManyToManyField(to='timetableapp.Subject', verbose_name='subjects')),
            ],
            options={
                'verbose_name': 'Curriculum record object',
                'verbose_name_plural': 'curriculum records',
                'ordering': ['group', 'semester'],
            },
        ),
        migrations.CreateModel(
            name='TimeTableRecording',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_number', lesson_field.models.LessonField(verbose_name='lesson number')),
                ('start_date', models.DateField(blank=True, default=None, null=True, verbose_name='start date')),
                ('end_date', models.DateField(blank=True, default=None, null=True, verbose_name='end date')),
                ('classroom', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='timetableapp.Classroom', verbose_name='classroom')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timetableapp.Lesson', verbose_name='lesson')),
                ('teacher', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='timetableapp.Teacher', verbose_name='teacher')),
            ],
            options={
                'verbose_name': 'Timetable recording object',
                'verbose_name_plural': 'timetable recordings',
                'unique_together': {('lesson', 'lesson_number', 'lesson')},
            },
        ),
        migrations.CreateModel(
            name='LessonResponsible',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timetableapp.Lesson', verbose_name='lesson')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timetableapp.Teacher', verbose_name='teacher')),
            ],
            options={
                'verbose_name': 'object Lesson responsible',
                'verbose_name_plural': 'lesson responsible',
                'unique_together': {('lesson', 'teacher')},
            },
            bases=(django_improvements.models.ReadOnlyOnExistForeignKey, models.Model),
        ),
        migrations.AlterUniqueTogether(
            name='group',
            unique_together={('group_stream', 'number')},
        ),
        migrations.CreateModel(
            name='Curriculum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.PositiveSmallIntegerField(verbose_name='semester')),
                ('start_date', models.DateField(blank=True, default=None, null=True, verbose_name='start date')),
                ('end_date', models.DateField(blank=True, default=None, null=True, verbose_name='end date')),
                ('group_stream', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timetableapp.GroupStream', verbose_name='group stream')),
            ],
            options={
                'verbose_name': 'Curriculum object',
                'verbose_name_plural': 'curriculums',
                'ordering': ['group_stream', 'semester'],
                'unique_together': {('group_stream', 'semester')},
            },
        ),
    ]
